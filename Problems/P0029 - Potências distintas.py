# -*- coding: utf-8 -*-
"""
Created on Wed Mar 17 17:49:38 2021

@author: ALEX BACK

DISTINCT POWERS

Consider all integer combinations of a^b for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

2^2=4, 2^3=8, 2^4=16, 2^5=32
3^2=9, 3^3=27, 3^4=81, 3^5=243
4^2=16, 4^3=64, 4^4=256, 4^5=1024
5^2=25, 5^3=125, 5^4=625, 5^5=3125
If they are then placed in numerical order, with any repeats removed, we get 
the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 
and 2 ≤ b ≤ 100?
"""
# IMPORTING
from datetime import datetime as date 

# FUNCTIONS

# INITIALIZATION
a = 100 
b = 100
distincts = []
start = date.now()
control = 2

# PROCESSING
for x in range(2, a+1):
    for y in range(2, b+1):
        power = x**y
        if power not in distincts : distincts.append(power)
        if len(distincts) >= control:
            control = control * 2
            print(x, y, len(distincts), date.now()-start)

# OUTUPUT        
print(len(distincts), date.now()-start)